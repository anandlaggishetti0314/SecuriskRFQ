type CoverageDetails{
id:String!
policyType:String
familyDefination:String
sumInsured:String
familyDefination13:Boolean
familyDefination15:Boolean
familyDefinationParents:Boolean
familyDefination13SumInsured:[Float]
familyDefination15SumInsured:[Float]
familyDefinationParentSumInsured:[Float]
empData:Boolean
employeeDeptDataFilePath:String
mandateLetterFilePath:String
coverageSought:String
DownloadTemplate:String
filledTemplate:String
employeeDeptDataFilePath1:String
coverageSought1:String
}


type ProductCategeory{
  id:String
  productCategeory:String
}
type IntermediateDetails{
     id:String
     productName:[String]
	 productCategeory:String
	 coverage:ID!
}
type Mutation{
createProduct(productCategeory:ProductCategeoryInput):ProductCategeory
createCoverageDetails(details:CoverageDetailsInput):String
createIntermediateDetails(details:IntermediateDetailsInput):String
updateDetails(updatedDetails:IntermediateDetailsInput):String
}

type Query{
getAll:[ProductCategeory]
getAllDetails:[IntermediateDetails]

}

input CoverageDetailsInput{
id:String
policyType:String
familyDefination:String
sumInsured:String
familyDefination13:Boolean
familyDefination15:Boolean
familyDefinationParents:Boolean
familyDefination13SumInsured:[Float]
familyDefination15SumInsured:[Float]
familyDefinationParentSumInsured:[Float]
empData:Boolean
employeeDeptDataFilePath:String
mandateLetterFilePath:String
coverageSought:String
DownloadTemplate:String
filledTemplate:String
employeeDeptDataFilePath1:String
coverageSought1:String
}


input ProductCategeoryInput{
 id:String
 productCategeory:String
}

input IntermediateDetailsInput{
     id:String
     productName:[String]
	 productCategeory:String
	 coverage:ID!
}


input ProductCategeoryinput{
productCategeory:String
}







